name: run pipeline

on:
  push:
    branches: ["main", "develop"]

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # To fetch all history for the branch

      - name: Authenticate with Adobe I/O
        uses: adobe/aio-apps-action@3.4.0
        id: auth
        with:
          command: oauth_sts
          clientid: ${{ secrets.ADOBE_CLIENTID }}
          clientsecret: ${{ secrets.ADOBE_CLIENTSECRET }}
          technicalaccountid: ${{ secrets.ADOBE_TECHNICALACCOUNTID }}
          technicalaccountemail: ${{ secrets.ADOBE_TECHNICALEMAIL }}
          imsorgid: ${{ secrets.ADOBE_IMSORGID }}
          scopes: 'ent_cloudmgr, openid, AdobeID, read_organizations, additional_info.projectedProductContext, read_pc.dma_aem_ams'

      - name: Create Execution
        uses: adobe/aio-cloudmanager-create-execution-action@v1.2.0
        with:
          PIPELINEID: ${{ secrets.ADOBE_PIPELINEID }}
          PROGRAMID: ${{ secrets.ADOBE_PROGRAMID }}
          IMSORGID: ${{ secrets.ADOBE_IMSORGID }}
      
      - name: Check Code Quality Pipeline Status
        run: |
          STATUS="RUNNING"
          PIPELINE_ID=${{ secrets.ADOBE_CODE_QUALITY_PIPELINEID }}
          PROGRAM_ID=${{ secrets.ADOBE_PROGRAMID }}
          IMS_ORG=${{ secrets.ADOBE_IMSORGID }}

          while [[ "$STATUS" == "RUNNING" || "$STATUS" == "NOT_STARTED" ]]; do
            RESPONSE=$(curl -s -X GET "https://cloudmanager.adobe.io/api/programs/$PROGRAM_ID/pipelines/$PIPELINE_ID/executions" \
              -H "x-gw-ims-org-id: $IMS_ORG" \
              -H "Authorization: Bearer ${{ secrets.ADOBE_ACCESS_TOKEN }}")
            
            STATUS=$(echo "$RESPONSE" | jq -r '.items[0].status')
            echo "Current Code Quality Status: $STATUS"

            if [[ "$STATUS" == "CANCELLED" || "$STATUS" == "FAILED" ]]; then
              echo "❌ Code Quality Failed!"
              exit 1
            fi

            if [[ "$STATUS" == "FINISHED" ]]; then
              echo "✅ Code Quality Passed!"
              exit 0
            fi

            sleep 30
          done
